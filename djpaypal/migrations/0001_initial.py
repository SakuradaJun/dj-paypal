# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2018-09-28 14:56
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import djpaypal.fields
import djpaypal.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BillingAgreement',
            fields=[
                ('livemode', models.BooleanField()),
                ('djpaypal_created', models.DateTimeField(auto_now_add=True)),
                ('djpaypal_updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(editable=False, max_length=128, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128)),
                ('state', models.CharField(choices=[(b'Active', b'Active'), (b'Cancelled', b'Cancelled'), (b'Completed', b'Completed'), (b'Created', b'Created'), (b'Pending', b'Pending'), (b'Reactivated', b'Reactivated'), (b'Suspended', b'Suspended')], editable=False, max_length=128)),
                ('description', models.CharField(max_length=128)),
                ('start_date', models.DateTimeField(db_index=True)),
                ('agreement_details', django.contrib.postgres.fields.jsonb.JSONField()),
                ('payer', django.contrib.postgres.fields.jsonb.JSONField()),
                ('shipping_address', django.contrib.postgres.fields.jsonb.JSONField()),
                ('override_merchant_preferences', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('override_charge_mode', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('plan', django.contrib.postgres.fields.jsonb.JSONField()),
                ('merchant', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('end_of_period', models.DateTimeField(db_index=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillingPlan',
            fields=[
                ('livemode', models.BooleanField()),
                ('djpaypal_created', models.DateTimeField(auto_now_add=True)),
                ('djpaypal_updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(editable=False, max_length=128, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('description', models.CharField(max_length=127)),
                ('type', models.CharField(choices=[(b'FIXED', b'Fixed'), (b'INFINITE', b'Infinite')], max_length=20)),
                ('state', models.CharField(choices=[(b'ACTIVE', b'Active'), (b'CREATED', b'Created'), (b'DELETED', b'Deleted'), (b'INACTIVE', b'Inactive')], max_length=20)),
                ('create_time', models.DateTimeField(db_index=True, editable=False)),
                ('update_time', models.DateTimeField(db_index=True, editable=False)),
                ('merchant_preferences', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChargeModel',
            fields=[
                ('livemode', models.BooleanField()),
                ('djpaypal_created', models.DateTimeField(auto_now_add=True)),
                ('djpaypal_updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(editable=False, max_length=128, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[(b'SHIPPING', b'Shipping'), (b'TAX', b'Tax')], max_length=20)),
                ('amount', djpaypal.fields.CurrencyAmountField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Dispute',
            fields=[
                ('livemode', models.BooleanField()),
                ('djpaypal_created', models.DateTimeField(auto_now_add=True)),
                ('djpaypal_updated', models.DateTimeField(auto_now=True)),
                ('dispute_id', models.CharField(editable=False, max_length=128, primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(db_index=True, editable=False)),
                ('update_time', models.DateTimeField(blank=True, db_index=True, editable=False, null=True)),
                ('disputed_transactions', django.contrib.postgres.fields.jsonb.JSONField(editable=False)),
                ('reason', models.CharField(choices=[(b'CANCELED_RECURRING_BILLING', b'Canceled recurring billing'), (b'CREDIT_NOT_PROCESSED', b'Credit not processed'), (b'DUPLICATE_TRANSACTION', b'Duplicate transaction'), (b'INCORRECT_AMOUNT', b'Incorrect amount'), (b'MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED', b'Merchandise or service not as described'), (b'MERCHANDISE_OR_SERVICE_NOT_RECEIVED', b'Merchandise or service not received'), (b'OTHER', b'Other'), (b'PAYMENT_BY_OTHER_MEANS', b'Payment by other means'), (b'PROBLEM_WITH_REMITTANCE', b'Problem occurred with the remittance'), (b'UNAUTHORISED', b'Unauthorized')], editable=False, max_length=39)),
                ('status', models.CharField(choices=[(b'OPEN', b'Open'), (b'OTHER', b'Other'), (b'RESOLVED', b'Resolved'), (b'UNDER_REVIEW', b'Under review'), (b'WAITING_FOR_BUYER_RESPONSE', b'Waiting for buyer response'), (b'WAITING_FOR_SELLER_RESPONSE', b'Waiting for seller response')], max_length=27)),
                ('dispute_amount', djpaypal.fields.CurrencyAmountField(editable=False)),
                ('dispute_channel', models.CharField(blank=True, editable=False, max_length=8)),
                ('dispute_life_cycle_stage', models.CharField(blank=True, editable=False, max_length=15)),
                ('dispute_outcome', django.contrib.postgres.fields.jsonb.JSONField(blank=True, editable=False, null=True)),
                ('messages', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('seller_response_due_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('dispute_flow', models.CharField(choices=[(b'ACCOUNT_ISSUES', b'Account issues'), (b'ACH_RETURNS', b'ACH returns'), (b'ADMIN_FRAUD_REVERSAL', b'Admin fraud reversal'), (b'BILLING', b'Billing'), (b'CHARGEBACKS', b'Chargebacks'), (b'COMPLAINT_RESOLUTION', b'Complaint resolution'), (b'CORRECTION', b'Correction'), (b'DEBIT_CARD_CHARGEBACK', b'Debit card chargeback'), (b'FAX_ROUTING', b'Fax routing'), (b'MIPS_COMPLAINT', b'MIPS complaint'), (b'MIPS_COMPLAINT_ITEM', b'MIPS complaint item'), (b'OPS_VERIFICATION_FLOW', b'OPS verification flow'), (b'OTHER', b'Other'), (b'PAYPAL_DISPUTE_RESOLUTION', b'Paypal dispute resolution'), (b'PINLESS_DEBIT_RETURN', b'Pinless debit return'), (b'PRICING_ADJUSTMENT', b'Pricing adjustment'), (b'SPOOF_UNAUTH_CHILD', b'Spoof Unauth Child'), (b'SPOOF_UNAUTH_PARENT', b'Spoof Unauth Parent'), (b'THIRD_PARTY_CLAIM', b'Third party claim'), (b'THIRD_PARTY_DISPUTE', b'Third party dispute'), (b'TICKET_RETRIEVAL', b'Ticket retrieval'), (b'UK_EXPRESS_RETURNS', b'UK Express returns'), (b'UNKNOWN_FAXES', b'Unknown faxes'), (b'VETTING', b'Vetting')], editable=False, max_length=25)),
                ('offer', django.contrib.postgres.fields.jsonb.JSONField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payer',
            fields=[
                ('id', models.CharField(max_length=13, primary_key=True, serialize=False)),
                ('first_name', models.CharField(db_index=True, editable=False, max_length=64)),
                ('last_name', models.CharField(db_index=True, editable=False, max_length=64)),
                ('email', models.CharField(db_index=True, editable=False, max_length=127)),
                ('shipping_address', django.contrib.postgres.fields.jsonb.JSONField(blank=True, editable=False, null=True)),
                ('time_created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('livemode', models.BooleanField()),
                ('djpaypal_created', models.DateTimeField(auto_now_add=True)),
                ('djpaypal_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, help_text=b'The most recent Django user that transacted as this Payer (best-effort).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paypal_payers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('livemode', models.BooleanField()),
                ('djpaypal_created', models.DateTimeField(auto_now_add=True)),
                ('djpaypal_updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(editable=False, max_length=128, primary_key=True, serialize=False)),
                ('intent', models.CharField(choices=[(b'authorize', b'Authorize'), (b'order', b'Order'), (b'sale', b'Sale')], max_length=9)),
                ('cart', models.CharField(blank=True, db_index=True, max_length=127, null=True)),
                ('payer', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('transactions', django.contrib.postgres.fields.jsonb.JSONField()),
                ('state', models.CharField(choices=[(b'approved', b'Approved'), (b'created', b'Created'), (b'failed', b'Failed')], max_length=8)),
                ('experience_profile_id', models.CharField(db_index=True, max_length=127)),
                ('note_to_payer', models.CharField(max_length=165)),
                ('create_time', models.DateTimeField(db_index=True, editable=False)),
                ('update_time', models.DateTimeField(db_index=True, editable=False)),
                ('redirect_urls', django.contrib.postgres.fields.jsonb.JSONField()),
                ('failure_reason', models.CharField(choices=[(b'CANNOT_PAY_THIS_PAYEE', b'Cannot pay this payee'), (b'INVALID_PAYMENT_METHOD', b'Invalid payment method'), (b'PAYEE_FILTER_RESTRICTIONS', b'Payee filter restrictions'), (b'PAYER_CANNOT_PAY', b'Payer cannot pay'), (b'REDIRECT_REQUIRED', b'Redirect required'), (b'UNABLE_TO_COMPLETE_TRANSACTION', b'Unable to complete transaction')], max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentDefinition',
            fields=[
                ('livemode', models.BooleanField()),
                ('djpaypal_created', models.DateTimeField(auto_now_add=True)),
                ('djpaypal_updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(editable=False, max_length=128, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('type', models.CharField(choices=[(b'REGULAR', b'Regular'), (b'TRIAL', b'Trial')], max_length=20)),
                ('frequency_interval', models.PositiveSmallIntegerField()),
                ('frequency', models.CharField(choices=[(b'DAY', b'Day'), (b'MONTH', b'Month'), (b'WEEK', b'Week'), (b'YEAR', b'Year')], max_length=20)),
                ('cycles', models.PositiveSmallIntegerField()),
                ('amount', djpaypal.fields.CurrencyAmountField()),
                ('charge_models', models.ManyToManyField(to='djpaypal.ChargeModel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PreparedBillingAgreement',
            fields=[
                ('id', models.CharField(editable=False, help_text=b'Same as the BillingAgreement token', max_length=128, primary_key=True, serialize=False)),
                ('livemode', models.BooleanField()),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('canceled_at', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('executed_agreement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prepared_agreements', to='djpaypal.BillingAgreement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('livemode', models.BooleanField()),
                ('djpaypal_created', models.DateTimeField(auto_now_add=True)),
                ('djpaypal_updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(editable=False, max_length=128, primary_key=True, serialize=False)),
                ('amount', djpaypal.fields.CurrencyAmountField(help_text=b'The refund amount. Includes both the amount refunded to the payer and amount of the fee refunded to the payee.')),
                ('state', models.CharField(choices=[(b'cancelled', b'Cancelled'), (b'completed', b'Completed'), (b'failed', b'Failed'), (b'pending', b'Pending')], editable=False, help_text=b'The state of the refund.', max_length=9)),
                ('reason', models.TextField(blank=True, help_text=b'The reason that the transaction is being refunded.')),
                ('invoice_number', models.CharField(blank=True, help_text=b'Your own invoice or tracking ID number.', max_length=127)),
                ('description', models.TextField(blank=True, help_text=b'The refund description.')),
                ('create_time', models.DateTimeField(db_index=True, editable=False)),
                ('update_time', models.DateTimeField(db_index=True, editable=False)),
                ('reason_code', models.CharField(choices=[(b'ECHECK', b'eCheck')], editable=False, help_text=b'The reason code for the pending refund state.', max_length=6)),
                ('refund_reason_code', models.CharField(choices=[(b'ADJUSTMENT_REVERSAL', b'Adjustment reversal'), (b'ADMIN_FRAUD_REVERSAL', b'Admin fraud reversal'), (b'ADMIN_REVERSAL', b'Admin reversal'), (b'APPEAL', b'Appeal'), (b'BUYER_COMPLAINT', b'Buyer complaint'), (b'CHARGEBACK', b'Chargeback'), (b'CHARGEBACK_SETTLEMENT', b'Chargeback settlement'), (b'DENIED', b'Denied'), (b'DISPUTE_PAYOUT', b'Dispute payout'), (b'FUNDING', b'Funding'), (b'GUARANTEE', b'Guarantee'), (b'LIMITS', b'Limits'), (b'NO_FAULT', b'No fault'), (b'OTHER', b'Other'), (b'REFUND', b'Refund'), (b'REGULATORY_BLOCK', b'Regulatory block'), (b'REGULATORY_REJECT', b'Regulatory reject'), (b'REGULATORY_REVIEW_EXCEEDING_SLA', b'Regulatory review exceeding SLA'), (b'RISK', b'Risk'), (b'SELLER_FAULT', b'Seller fault'), (b'SELLER_VOLUNTARY', b'Seller voluntary'), (b'THIRDPARTY_LOGISTICS_FAULT', b'Third-party logistics fault'), (b'UNAUTH_CLAIM', b'Unauth claim'), (b'UNAUTH_SPOOF', b'Unauth spoof')], editable=False, help_text=b'The PayPal-assigned reason codes for the refund.', max_length=31)),
                ('refund_funding_type', models.CharField(choices=[(b'PAYOUT', b'Payout')], editable=False, help_text=b"Indicates whether the refund amount is funded by the payee's funding account or another funding account.", max_length=6)),
                ('parent_payment', models.ForeignKey(editable=False, help_text=b'The payment on which this transaction is based', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='refunds', to='djpaypal.Payment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('livemode', models.BooleanField()),
                ('djpaypal_created', models.DateTimeField(auto_now_add=True)),
                ('djpaypal_updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(editable=False, max_length=128, primary_key=True, serialize=False)),
                ('amount', djpaypal.fields.CurrencyAmountField(editable=False)),
                ('payment_mode', models.CharField(choices=[(b'DELAYED_TRANSFER', b'Delayed transfer'), (b'ECHECK', b'eCheck'), (b'INSTANT_TRANSFER', b'Instant transfer'), (b'MANUAL_BANK_TRANSFER', b'Manual bank transfer')], editable=False, max_length=20)),
                ('state', models.CharField(choices=[(b'completed', b'Completed'), (b'denied', b'Denied'), (b'partially_refunded', b'Partially refunded'), (b'pending', b'Pending'), (b'refunded', b'Refunded')], editable=False, max_length=20)),
                ('reason_code', models.CharField(choices=[(b'BUYER_COMPLAINT', b'Buyer complaint'), (b'CHARGEBACK', b'Chargeback'), (b'ECHECK', b'eCheck'), (b'GUARANTEE', b'Guarantee'), (b'INTERNATIONAL_WITHDRAWAL', b'International withdrawal'), (b'PAYMENT_REVIEW', b'Payment review'), (b'RECEIVING_PREFERENCE_MANDATES_MANUAL_ACTION', b'Receiving preference mandates manual action'), (b'REFUND', b'Refund'), (b'REGULATORY_REVIEW', b'Regulatory review'), (b'TRANSACTION_APPROVED_AWAITING_FUNDING', b'Transaction approved awaiting funding'), (b'UNCONFIRMED_SHIPPING_ADDRESS', b'Unconfirmed shipping address'), (b'UNILATERAL', b'Unilateral'), (b'VERIFICATION_REQUIRED', b'Verification required')], editable=False, max_length=43)),
                ('protection_eligibility', models.CharField(choices=[(b'ELIGIBLE', b'Eligible'), (b'INELIGIBLE', b'Ineligible'), (b'PARTIALLY_ELIGIBLE', b'Partially eligible')], editable=False, max_length=18)),
                ('protection_eligibility_type', models.CharField(choices=[(b'ITEM_NOT_RECEIVED_ELIGIBLE', b'Item not received eligible'), (b'ITEM_NOT_RECEIVED_ELIGIBLE,UNAUTHORIZED_PAYMENT_ELIGIBLE', b'Both'), (b'UNAUTHORIZED_PAYMENT_ELIGIBLE', b'Unauthorized payment eligible')], editable=False, max_length=56)),
                ('clearing_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('transaction_fee', djpaypal.fields.CurrencyAmountField(blank=True, editable=False, null=True)),
                ('receivable_amount', djpaypal.fields.CurrencyAmountField(blank=True, editable=False, null=True)),
                ('exchange_rate', models.CharField(editable=False, max_length=64)),
                ('fmf_details', django.contrib.postgres.fields.jsonb.JSONField(blank=True, editable=False, null=True)),
                ('receipt_id', models.CharField(db_index=True, editable=False, max_length=19)),
                ('processor_response', django.contrib.postgres.fields.jsonb.JSONField(blank=True, editable=False, null=True)),
                ('create_time', models.DateTimeField(db_index=True, editable=False)),
                ('update_time', models.DateTimeField(db_index=True, editable=False)),
                ('soft_descriptor', models.CharField(blank=True, editable=False, max_length=127)),
                ('billing_agreement', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='djpaypal.BillingAgreement')),
                ('parent_payment', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='djpaypal.Payment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WebhookEvent',
            fields=[
                ('livemode', models.BooleanField()),
                ('djpaypal_created', models.DateTimeField(auto_now_add=True)),
                ('djpaypal_updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(editable=False, max_length=128, primary_key=True, serialize=False)),
                ('event_version', models.CharField(editable=False, max_length=8)),
                ('create_time', models.DateTimeField(db_index=True, editable=False)),
                ('event_type', models.CharField(editable=False, max_length=64)),
                ('resource_type', models.CharField(editable=False, max_length=64)),
                ('resource', django.contrib.postgres.fields.jsonb.JSONField(editable=False)),
                ('status', models.CharField(blank=True, editable=False, max_length=64)),
                ('summary', models.CharField(editable=False, max_length=256)),
                ('transmissions', django.contrib.postgres.fields.jsonb.JSONField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WebhookEventTrigger',
            fields=[
                ('id', djpaypal.utils.BigAutoField(primary_key=True, serialize=False)),
                ('remote_ip', models.GenericIPAddressField(help_text=b'IP address of the request client.')),
                ('headers', django.contrib.postgres.fields.jsonb.JSONField()),
                ('body', models.TextField(blank=True)),
                ('valid', models.BooleanField(default=False)),
                ('processed', models.BooleanField(default=False)),
                ('exception', models.CharField(blank=True, max_length=128)),
                ('traceback', models.TextField(blank=True)),
                ('djpaypal_version', models.CharField(default=djpaypal.utils.get_version, help_text=b'The version of dj-paypal when the webhook was received', max_length=32)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('webhook_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='djpaypal.WebhookEvent')),
            ],
        ),
        migrations.AddField(
            model_name='refund',
            name='sale',
            field=models.ForeignKey(editable=False, help_text=b'The sale transaction being refunded.', on_delete=django.db.models.deletion.PROTECT, related_name='refunds', to='djpaypal.Sale'),
        ),
        migrations.AddField(
            model_name='billingplan',
            name='payment_definitions',
            field=models.ManyToManyField(to='djpaypal.PaymentDefinition'),
        ),
        migrations.AddField(
            model_name='billingagreement',
            name='payer_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='djpaypal.Payer'),
        ),
        migrations.AddField(
            model_name='billingagreement',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
    ]
